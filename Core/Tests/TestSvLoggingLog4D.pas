unit TestSvLoggingLog4D;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, SvLogging.Log4D, SysUtils, SvLogging, Log4D;

type
  // Test methods for class TLog4DLogger

  TestTLog4DLogger = class(TTestCase)
  private
    FLog4DLogger: TLog4DLogger;
    FProc: TProc<string>;
    FTest: string;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestLog;
  end;

implementation

uses
  SvLogging.Log4D.Appenders
  ;


procedure TestTLog4DLogger.SetUp;
begin
  inherited;
  FTest := '';
  FProc := procedure(Arg1: string)
    begin
      FTest := Arg1;
    end;
  FLog4DLogger := TLog4DLogger.Create('test');
  FLog4DLogger.Logger.AddAppender(TAnonymousAppender.Create(FProc));
end;

procedure TestTLog4DLogger.TearDown;
begin
  FLog4DLogger.Free;
  FLog4DLogger := nil;
  inherited;
end;

procedure TestTLog4DLogger.TestLog;
begin
  FTest := '';
  FLog4DLogger.Log(TSvLogLevel.Fatal, 'test');
  CheckEqualsString('fatal - test' + #13#10, FTest);
  FTest := '';
  FLog4DLogger.Log(TSvLogLevel.Info, 'test');
  CheckEqualsString('', FTest);

  FLog4DLogger.Log(TSvLogLevel.Error, 'test');
  CheckEqualsString('error - test' + #13#10, FTest);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTLog4DLogger.Suite);
end.

